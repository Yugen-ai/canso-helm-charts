# Default values for canso-fraud-analyst-db-foundation.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


##############################################################################################
####    Postgres configs for the Bitnami Chart
##############################################################################################

postgresql:
  enabled: true
  architecture: replication
  auth:
    database: "cansodb_case_mgmt"
    username: "cansoappuser"
    # If empty or not set, a random password will be generated.
    password: ""
    # -- Optional: Specify an existing secret name that contains the PostgreSQL passwords.
    # If set, the 'password' field above is ignored, and the chart expects keys like 'postgresql-password' or 'password'.
    # existingSecret: ""
    # -- Enable PostgreSQL client authentication using scram-sha-256. Recommended for security.
    enablePostgresUser: true
    usePasswordFiles: false # Keep false unless specific need arises

  primary:
    # -- Number of primary nodes (should always be 1 in replication mode)
    # replicaCount: 1 # This is usually managed by the chart logic in replication mode

    # -- Persistence configuration for the primary node
    persistence:
      enabled: true
      # -- Optional: Specify a StorageClass name. If null or "", the default StorageClass is used.
      storageClass: "" # e.g., "gp2", "managed-premium", "" for default
      # -- Size of the persistent volume for the primary node.
      size: 10Gi
    
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "500m"
    
    service:
      # -- Kubernetes Service type for the primary node. ClusterIP is standard for internal access.
      type: ClusterIP
      # -- Ports configuration for the primary service.
      ports:
        postgresql: 5432
  
  readReplicas:
    # -- Number of read replica nodes for HA and read scaling.
    replicaCount: 2 # Total instances = primary (1) + readReplicas (2) = 3

    # -- Persistence configuration for the read replica nodes
    persistence:
      enabled: true
      # -- Optional: Specify a StorageClass name. If null or "", the default StorageClass is used.
      storageClass: "" # e.g., "gp2", "managed-premium", "" for default
      # -- Size of the persistent volume for the read replica nodes.
      size: 10Gi
    
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "500m"

    # -- Service configuration for the read replicas
    service:
      # -- Kubernetes Service type for the read replicas. ClusterIP is standard for internal access.
      type: ClusterIP
      # -- Ports configuration for the read replica service.
      ports:
        postgresql: 5432
  
  # -- Enable metrics exporter (Prometheus)
  metrics:
    enabled: false
    # resources:
    #   requests:
    #     memory: "128Mi"
    #     cpu: "100m"
    #   limits:
    #     memory: "256Mi"
    #     cpu: "200m"


##############################################################################################
####    Postgres configs for the Bitnami Chart
##############################################################################################

dbSchemaSetup:
  # -- Enable the database schema setup Job. Runs on pre-install/pre-upgrade.
  enabled: true

  # -- Container image for the Flyway migration job.
  # You need to build and push an image containing Flyway CLI, JDBC driver, and your SQL scripts.
  image:
    repository: "canso-fraud-analyst-service"
    tag: "db-v3"
    pullPolicy: IfNotPresent

  # -- Flyway specific configuration
  flyway:
    # -- Comma-separated list of locations to scan recursively for migrations.
    # Corresponds to the directory inside the image where SQL scripts are copied.
    locations: "filesystem:/flyway/sql"

  # -- Kubernetes Job backoff limit (number of retries upon failure).
  backoffLimit: 2

  # -- Time-to-live in seconds for finished Jobs. Cleans up completed Job resources automatically.
  ttlSecondsAfterFinished: 3600 # 1 hour

  # -- Resource requests and limits for the migration Job pod.
  # Usually needs less resources than the DB itself, but adjust if migrations are heavy.
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "250m"

