karpenter:
  ## @param karpenter.nameOverride String to override partial name passed in helm install command
  ##
  nameOverride: "canso-karpenter"
  ## @param karpenter.fullnameOverride String to override full name passed in helm install command
  ##
  fullnameOverride: ""
  ## @param karpenter.additionalLabels Additional labels to add into metadata.
  ##
  additionalLabels: {}
  ## @param karpenter.additionalAnnotations Additional annotations to add into metadata.
  ##
  additionalAnnotations: {}
  ## @param karpenter.imagePullPolicy Image pull policy for Docker images.
  ##
  imagePullPolicy: IfNotPresent
  ## @param karpenter.imagePullSecrets Image pull secrets for Docker images.
  ##
  imagePullSecrets: []

  ####################################################
  ################ Service Account
  ####################################################

  ## @section karpenter.serviceAccount Service account configuration
  serviceAccount:
    ## @param karpenter.serviceAccount.create Specifies whether a ServiceAccount should be created.
    ##
    create: true
    ## @param karpenter.serviceAccount.name The name of the ServiceAccount to use.
    ##
    name: "karpenter"
    ## @param karpenter.serviceAccount.annotations Additional annotations for the ServiceAccount.
    ##
    annotations: {}

  ## @param karpenter.additionalClusterRoleRules Additional rules to add into the ClusterRole.
  ##
  additionalClusterRoleRules: []

  ## @section karpenter.serviceMonitor Service monitor configuration
  serviceMonitor:
    ## @param karpenter.serviceMonitor.enabled Specifies whether a ServiceMonitor should be created.
    ##
    enabled: false
    ## @param karpenter.serviceMonitor.additionalLabels Additional labels for the ServiceMonitor.
    ##
    additionalLabels: {}
    ## @param karpenter.serviceMonitor.endpointConfig Endpoint configuration for the ServiceMonitor.
    ##
    endpointConfig: {}

  ## @param karpenter.replicas Number of replicas for the Karpenter controller.
  ##
  replicas: 2
  ## @param karpenter.revisionHistoryLimit The number of old ReplicaSets to retain to allow rollback.
  ##
  revisionHistoryLimit: 10

  ## @section karpenter.strategy Rolling update configuration parameters.
  ##
  strategy:
    ## @skip karpenter.strategy.rollingUpdate
    rollingUpdate:
      maxUnavailable: 1

  ## @param karpenter.podLabels Additional labels for the Karpenter pod.
  ##
  podLabels: {}
  ## @param karpenter.podAnnotations Additional annotations for the Karpenter pod.
  ##
  podAnnotations: {}

  ## @skip karpenter.podDisruptionBudget Pod disruption budget configuration.
  ##
  podDisruptionBudget:
    name: karpenter
    maxUnavailable: 1
  ## @param karpenter.priorityClassName PriorityClass name for the pod.
  ##
  priorityClassName: system-cluster-critical

  ## @skip karpenter.terminationGracePeriodSeconds Override the default termination grace period for the pod.
  ##
  terminationGracePeriodSeconds:

  ## @param karpenter.hostNetwork Bind the pod to the host network (required when using a custom CNI).
  ##
  hostNetwork: false
  ## @param karpenter.dnsPolicy Configure the DNS Policy for the pod.
  ##
  dnsPolicy: ClusterFirst

  ## @param karpenter.dnsConfig Configure DNS Config for the pod.
  ##
  dnsConfig: {}

  ## @skip karpenter.nodeSelector Node selectors to schedule the pod to nodes with labels.
  ##
  nodeSelector:
    kubernetes.io/os: linux


  ####################################################
  ################ Affinity
  ####################################################

  ## @section karpenter.affinity Affinity rules for scheduling the pod.
  ##
  affinity:
    ## @skip karpenter.affinity.nodeAffinity Node affinity rules for scheduling the pod.
    ##
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: karpenter.sh/nodepool
                operator: DoesNotExist
    ## @skip karpenter.affinity.podAntiAffinity Pod anti-affinity rules for scheduling the pod.
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: "kubernetes.io/hostname"

  ## @skip karpenter.topologySpreadConstraints Topology spread constraints to increase controller resilience by distributing pods across zones.
  ##
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: DoNotSchedule

  ## @skip karpenter.tolerations Tolerations to allow the pod to be scheduled to nodes with taints.
  ##
  tolerations:
    - key: CriticalAddonsOnly
      operator: Exists

  ## @param karpenter.extraVolumes Additional volumes for the pod.
  ##
  extraVolumes: []


  ####################################################
  ################ Controller
  ####################################################

  ## @section karpenter.controller Karpenter controller configuration
  controller:
    ## @subsection karpenter.controller.image Image configuration for the controller
    image:
      ## @param karpenter.controller.image.repository Repository path to the controller image.
      ##
      repository: public.ecr.aws/karpenter/controller
      ## @param karpenter.controller.image.tag Tag of the controller image.
      ##
      tag: 1.0.7
      ## @param karpenter.controller.image.digest SHA256 digest of the controller image.
      ##
      digest: sha256:1c64c64ec89b7d33c93558d24f3c7a26b6176869ac11182b870fe9edb5c033ce

    ## @param karpenter.controller.env Additional environment variables for the controller pod.
    ##
    env: []

    ## @param karpenter.controller.envFrom Additional environment variables from config map or secret.
    ##
    envFrom: []

    ## @param karpenter.controller.resources Resources for the controller pod.
    ##
    resources: {}

    ## @param karpenter.controller.extraVolumeMounts Additional volumeMounts for the controller pod.
    ##
    extraVolumeMounts: []

    ## @param karpenter.controller.sidecarContainer Additional sidecar container configuration for the controller pod.
    ##
    sidecarContainer: []
    ## @param karpenter.controller.sidecarVolumeMounts Additional volume mounts for the sidecar container.
    ##
    sidecarVolumeMounts: []

    ## @subsection karpenter.controller.metrics Metrics configuration for the controller pod.
    metrics:
      ## @param karpenter.controller.metrics.port The container port to use for metrics.
      ##
      port: 8080

    ## @subsection karpenter.controller.healthProbe Health probe configuration for the controller pod.
    healthProbe:
      ## @param karpenter.controller.healthProbe.port The container port to use for the http health probe.
      ##
      port: 8081

  ## @section karpenter.webhook Webhook configuration
  webhook:
    ## @param karpenter.webhook.enabled Whether to enable the webhooks and webhook permissions.
    ##
    enabled: false
    ## @param karpenter.webhook.port The container port to use for the webhook.
    ##
    port: 8443
    ## @subsection karpenter.webhook.metrics Metrics configuration for the webhook.
    metrics:
      ## @param karpenter.webhook.metrics.port The container port to use for webhook metrics.
      ##
      port: 8001

  ## @param karpenter.logLevel Global log level, defaults to 'info'
  ##
  logLevel: info


  ####################################################
  ################ Log Config
  ####################################################

  ## @param karpenter.logOutputPaths Log outputPaths defaults to stdout only
  ##
  logOutputPaths:
    - stdout
  ## @param karpenter.logErrorOutputPaths Log errorOutputPaths defaults to stderr only
  ##
  logErrorOutputPaths:
    - stderr

  ## @section karpenter.settings Global settings to configure Karpenter
  settings:
    ## @param karpenter.settings.batchMaxDuration The maximum length of a batch window.
    ##
    batchMaxDuration: 10s

    ## @param karpenter.settings.batchIdleDuration The maximum amount of time with no new ending pods that if exceeded ends the current batching window.
    ##
    batchIdleDuration: 1s

    ## @param karpenter.settings.clusterCABundle Cluster CA bundle for TLS configuration of provisioned nodes. If not set, this is taken from the controller's TLS configuration for the API server.
    clusterCABundle: ""

    ## @param karpenter.settings.clusterName Cluster name.
    clusterName: ""

    ## @param karpenter.settings.clusterEndpoint Cluster endpoint. If not set, will be discovered during startup (EKS only).
    clusterEndpoint: ""

    ## @param karpenter.settings.isolatedVPC If true, assume AWS services without a VPC endpoint cannot be reached. This also disables look-ups to the AWS pricing endpoint.
    isolatedVPC: false

    ## @param karpenter.settings.vmMemoryOverheadPercent The VM memory overhead as a percent, subtracted from total memory for all instance types.
    vmMemoryOverheadPercent: 0.075

    ## @param karpenter.settings.interruptionQueue Name of the SQS queue to use for interruption handling. If not specified, interruption handling is disabled. Enabling requires additional permissions on the controller service account, as outlined in the documentation.
    interruptionQueue: ""

    ## @param karpenter.settings.reservedENIs Number of reserved ENIs not included in max-pods or kube-reserved calculations. Often used in VPC CNI custom networking.
    reservedENIs: "0"

    ## @section karpenter.settings.featureGates Feature gate configuration values. Feature gates follow the same graduation process and requirements as in Kubernetes.
    featureGates:
      ## @param karpenter.settings.featureGates.spotToSpotConsolidation Setting this to true will enable spot replacement consolidation for both single and multi-node consolidation.
      spotToSpotConsolidation: false
    