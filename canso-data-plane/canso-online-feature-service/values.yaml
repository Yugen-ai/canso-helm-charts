## @section spec
spec:
  ## @param spec.service_name Name of the service to be deployed
  service_name: &service_name "canso-online-fs"

## @param nameOverride Override the name of the service
nameOverride: "canso-online-feature"

## @param fullnameOverride Override the full name of the service
fullnameOverride: "canso-online-feature-service"

##############################################################################################
####    External Secrets Config
##############################################################################################

## @section External Secrets Config
external_secret:
  ## @param external_secret.enabled Enable the creation of the secret
  ##
  enabled: true
  ## @param external_secret.name The name of the secret that will be created
  ##
  name: *service_name
  ## @param external_secret.cluster_secret_role The name of the cluster secret role creted in the cluster
  ##
  cluster_secret_role: secretstore-by-role
  ## @param external_secret.target_secret_name The name of the secret that will be created
  ##
  target_secret_name: &image_pull_secret_name docker-secret-cred
  ## @param external_secret.target_secret_type The type of the secret that will be created
  ##
  target_secret_type: kubernetes.io/dockerconfigjson
  ## @param external_secret.target_secret_name_key The key within the secret in the external secrets store that holds the Docker configuration JSON.
  ##
  target_secret_name_key: .dockerconfigjson
  ## @param external_secret.aws_secret_name The path to the secret in AWS Secrets Manager that contains the Docker credentials
  ##
  aws_secret_name: canso/dockerhub
  ## @param external_secret.aws_secret_key The key within the secret in AWS Secrets Manager that contains the Docker credentials.
  ##
  aws_secret_key: dockerhub

##############################################################################################
####    Deployment 
##############################################################################################

## @section Deployment 
deployment:

  ## @subsection ImagePullSecrets
  ImagePullSecrets:
    ## @param deployment.ImagePullSecrets.enabled Enable the creation of the secret
    ##
    enabled: true
    ## @param deployment.ImagePullSecrets.private_registry_secret The name of the secret created by external secrets
    ##
    private_registry_secret: *image_pull_secret_name

  ## @param deployment.replicaCount Number of replicas to deploy
  replicaCount: 2

  ## @section deployment.image 
  image:
    ## @param deployment.image.repository The image repository
    repository: shaktimaanbot/feature-retrieval-server-prod
    ## @param deployment.image.pullPolicy Image pull policy
    pullPolicy: IfNotPresent
    ## @param deployment.image.tag Overrides the image tag whose default is the chart appVersion.
    tag: "sha256:220563b873f6c2e0c7ce063da6655e6059a69b47db0e93806df7b72e0f165bbd"

  ## @skip deployment.resources The resources requests and limits for the container.
  resources:
    limits:
      cpu: "400m"
      memory: "500Mi"
    requests:
      cpu: "50m"
      memory: "100Mi"
  ## @param deployment.enableEnv Enable the environment variables
  enableEnv: false
  ## @param deployment.enableEnvSecrets Enable the environment variables from secrets
  enableEnvSecrets: false

## @section autoscaling 
autoscaling:
  ## @param autoscaling.enabled enable autoscaling for the pods
  enabled: false

## @section taint 
taint:
  ## @param taint.enabled enabletaint for deployment pods
  enabled: false

##############################################################################################
####      Service COnfig
##############################################################################################

## @section Service
service:
  ## @param service.name The name of the service
  name: *service_name
  ## @param service.app The app name for service labels
  app: *service_name
  ## @param service.targetport The target port for the service
  targetport: 8080


##############################################################################################
###      Ingress Config
##############################################################################################

## @section Ingress
ingress:
  ## @param ingress.enabled Enable the ingress
  enabled: true
  ## @param ingress.host The host for the ingress
  host: "" # example: feature-retrieval.company.com
  ## @param ingress.path The path for path based routing
  path: /
  ## @param ingress.pathType The path type for the ingress
  pathType: Prefix
  ## @param ingress.ingressClassName The ingress class name 
  ingressClassName: alb
  ## @skip ingress.annotations The annotations for the ingress
  annotations:
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/certificate-arn: '' 
    alb.ingress.kubernetes.io/group.name: '' # Ingress Grouop
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80},{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/scheme: 'internet-facing'
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '60'
    alb.ingress.kubernetes.io/healthcheck-path: '/fs/api/health'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '30'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/tags: Environment=stage # Ingress tags
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTPS

