{{- if .Values.externalSecrets.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: external-secrets
  namespace: argocd
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-weight: "-19"
    argocd.argoproj.io/sync-wave: "-5"
  labels:
    canso.ai/product-component: "infra-dependencies"
    canso.ai/part-of: "superchart"
    canso.ai/infra-component: "external-secrets-operator"
    canso.ai/infra-tag: "1000"
spec:
  generators:
  - list:
      elements:
      - cluster: {{ .Values.clusterName }}
        url: https://kubernetes.default.svc
  template:
    metadata:
      name: external-secrets
    spec:
      project: {{ .Values.argocdProject }}
      destination:
        namespace: external-secrets
        server: https://kubernetes.default.svc
      source:
        repoURL: https://charts.external-secrets.io
        chart: external-secrets
        targetRevision: 0.9.18
        helm:
          values: |-
            installCRDs: true
            crds:
              createClusterExternalSecret: true
              createClusterSecretStore: true
            leaderElect: false
            replicaCount: 1
            podAnnotations:
              consul.hashicorp.com/connect-inject: 'false'
            serviceAccount:
              create: true
              annotations:
                eks.amazonaws.com/role-arn: {{ .Values.externalSecrets.serviceaccount.roleArn }}
              extraLabels:
                canso.ai/product-component: "infra-dependencies"
                canso.ai/part-of: "superchart"
                canso.ai/infra-component: "external-secrets-sa"
                canso.ai/infra-tag: "1000"
                canso.ai/component-domain: "external-secrets-operator"
              name: {{ .Values.externalSecrets.serviceaccount.name }}
            webhook:
              replicaCount: 1
              certCheckInterval: "1m"
              podAnnotations:
                consul.hashicorp.com/connect-inject: 'false'
              serviceAccount:
                create: true
            certController:
              requeueInterval: "1m"
              replicaCount: 1
              podAnnotations:
                consul.hashicorp.com/connect-inject: 'false'
              serviceAccount:
                create: true
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
{{- end }}